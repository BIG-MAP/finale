{
  "title": "Measurement",
  "description": "A Measurement is done on a Formulation and contains data\n\nExample:\nA = Compound(chemicals=[Chemical(smiles='COC(=O)OC',name='DMC',reference='DMC_ELyte_2020'),\n                              Chemical(smiles='[Li+].F[P-](F)(F)(F)(F)F',name='LiPF6',reference='LiPF6_Elyte_2020')],\n                   amounts=[Amount(value=0.5,unit='mol'),Amount(value=0.1,unit='mol')],\n                   name='LiPF6_salt_in_DMC_5:1')\nB = Compound(chemicals=[Chemical(smiles='CC1COC(=O)O1',name='PC',reference='PC_ELyte_2020'),\n                              Chemical(smiles='[Li+].F[P-](F)(F)(F)(F)F',name='LiPF6',reference='LiPF6_Elyte_2020')],\n                   amounts=[Amount(value=0.5,unit='mol'),Amount(value=0.1,unit='mol')],\n                   name='LiPF6_salt_in_PC_5:1')\nform_1 = Formulation(compounds=[A,B],ratio=[3,1],ratio_method='volumetric')\n\ntemp_1 = Temperature(unit='K',value=380)\norig_1 = Origin(origin='experiment')\nfom_1 = FomData(value=3,unit=\"g/cm**3\",origin=orig_1,measurement_id='123',name='Density')\n\nmeas_1 = Measurement(formulation=form_1, temperature=temp_1,pending=True,fom_data=fom_1,kind='experiment')",
  "type": "object",
  "properties": {
    "formulation": {
      "$ref": "#/definitions/Formulation"
    },
    "temperature": {
      "$ref": "#/definitions/Temperature"
    },
    "pending": {
      "title": "Pending",
      "type": "boolean"
    },
    "fom_data": {
      "$ref": "#/definitions/FomData"
    },
    "kind": {
      "$ref": "#/definitions/Origin"
    }
  },
  "required": [
    "formulation",
    "temperature",
    "pending",
    "kind"
  ],
  "definitions": {
    "Chemical": {
      "title": "Chemical",
      "description": "This defines a chemical\n\nEvery chemical needs a SMILES and a name like DMC => COC(=O)OC\nA reference is an optional thing like \"Vile 211003-Vial2-DMC\"\nExample:\n    Chemical(smiles='COC(=O)OC',name='DMC',reference='DMC_Elyte_2020')",
      "type": "object",
      "properties": {
        "smiles": {
          "title": "Smiles",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "type": "string"
        },
        "reference": {
          "title": "Reference",
          "default": "",
          "type": "string"
        }
      },
      "required": [
        "smiles",
        "name"
      ]
    },
    "Amount": {
      "title": "Amount",
      "description": "We store amount in units of mole TODO: Maybe recalc to mol?\n\nAmount is stored as a tuple like object i.e. how much and of what unit\nCurrently we only do mol\nExample: Amount(value=0.001,unit='mol')",
      "type": "object",
      "properties": {
        "value": {
          "title": "Value",
          "type": "number"
        },
        "unit": {
          "title": "Unit",
          "type": "string"
        }
      },
      "required": [
        "value",
        "unit"
      ]
    },
    "Compound": {
      "title": "Compound",
      "description": "Formulations are lists of Compound which are lists of chemicals\n\nA Compound can be made up of one or more chemicals of amounts\nThis is needed as some electrolyte chemicals are not liquid in their pure form at RT\nExample:\n    Compound(chemicals=[Chemical(smiles='COC(=O)OC',name='DMC',reference='DMC_Elyte_2020'),\n                              Chemical(smiles='[Li+].F[P-](F)(F)(F)(F)F',name='LiPF6',reference='LiPF6_Elyte_2020')],\n                   amounts=[Amount(value=0.5,unit='mol'),Amount(value=0.1,unit='mol')],\n                   name='LiPF6_salt_in_DMC_5:1')",
      "type": "object",
      "properties": {
        "chemicals": {
          "title": "Chemicals",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Chemical"
          }
        },
        "amounts": {
          "title": "Amounts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Amount"
          }
        },
        "name": {
          "title": "Name",
          "type": "string"
        }
      },
      "required": [
        "chemicals",
        "amounts",
        "name"
      ]
    },
    "Formulation": {
      "title": "Formulation",
      "description": "A Formulation is a ratio mix of different compounds\n\nExample:\nA = Compound(chemicals=[Chemical(smiles='COC(=O)OC',name='DMC',reference='DMC_ELyte_2020'),\n                              Chemical(smiles='[Li+].F[P-](F)(F)(F)(F)F',name='LiPF6',reference='LiPF6_Elyte_2020')],\n                   amounts=[Amount(value=0.5,unit='mol'),Amount(value=0.1,unit='mol')],\n                   name='LiPF6_salt_in_DMC_5:1')\nB = Compound(chemicals=[Chemical(smiles='CC1COC(=O)O1',name='PC',reference='PC_ELyte_2020'),\n                              Chemical(smiles='[Li+].F[P-](F)(F)(F)(F)F',name='LiPF6',reference='LiPF6_Elyte_2020')],\n                   amounts=[Amount(value=0.5,unit='mol'),Amount(value=0.1,unit='mol')],\n                   name='LiPF6_salt_in_PC_5:1')\nform_1 = Formulation(compounds=[A,B],ratio=[3,1],ratio_method='volumetric')",
      "type": "object",
      "properties": {
        "compounds": {
          "title": "Compounds",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Compound"
          }
        },
        "ratio": {
          "title": "Ratio",
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "ratio_method": {
          "title": "Ratio Method",
          "type": "string"
        }
      },
      "required": [
        "compounds",
        "ratio",
        "ratio_method"
      ]
    },
    "Temperature": {
      "title": "Temperature",
      "description": "Temperature in Kelvin\nExample:\n    Temperature(value=380,unit='K')",
      "type": "object",
      "properties": {
        "value": {
          "title": "Value",
          "type": "number"
        },
        "unit": {
          "title": "Unit",
          "type": "string"
        }
      },
      "required": [
        "value",
        "unit"
      ]
    },
    "FomEnum": {
      "title": "FomEnum",
      "description": "An enumeration.",
      "enum": [
        "Density",
        "Viscosity"
      ],
      "type": "string"
    },
    "OriginEnum": {
      "title": "OriginEnum",
      "description": "An enumeration.",
      "enum": [
        "experiment",
        "simulation"
      ],
      "type": "string"
    },
    "Origin": {
      "title": "Origin",
      "type": "object",
      "properties": {
        "origin": {
          "$ref": "#/definitions/OriginEnum"
        },
        "what": {
          "title": "What",
          "type": "string"
        }
      },
      "required": [
        "origin"
      ]
    },
    "FomData": {
      "title": "FomData",
      "description": "This is a wrapper for figure of merit (FOM) i.e. scalar data\n\nExample:\n    fom_1 = FomData(value=3,unit=\"g/cm**3\",origin=\"experiment\")",
      "type": "object",
      "properties": {
        "value": {
          "title": "Value",
          "type": "number"
        },
        "unit": {
          "title": "Unit",
          "type": "string"
        },
        "name": {
          "$ref": "#/definitions/FomEnum"
        },
        "origin": {
          "$ref": "#/definitions/Origin"
        },
        "measurement_id": {
          "title": "Measurement Id",
          "type": "string"
        }
      },
      "required": [
        "value",
        "unit",
        "name",
        "origin",
        "measurement_id"
      ]
    }
  }
}